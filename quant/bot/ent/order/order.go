// Code generated by ent, DO NOT EDIT.

package order

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the order type in the database.
	Label = "order"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldMaintOrderNo holds the string denoting the maintorderno field in the database.
	FieldMaintOrderNo = "maint_order_no"
	// FieldVehiclePlateNo holds the string denoting the vehicleplateno field in the database.
	FieldVehiclePlateNo = "vehicle_plate_no"
	// FieldVehicleTeamName holds the string denoting the vehicleteamname field in the database.
	FieldVehicleTeamName = "vehicle_team_name"
	// FieldMaintRequestType holds the string denoting the maintrequesttype field in the database.
	FieldMaintRequestType = "maint_request_type"
	// FieldDispatchedStationId holds the string denoting the dispatchedstationid field in the database.
	FieldDispatchedStationId = "dispatched_station_id"
	// FieldStationName holds the string denoting the stationname field in the database.
	FieldStationName = "station_name"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the order in the database.
	Table = "order"
)

// Columns holds all SQL columns for order fields.
var Columns = []string{
	FieldID,
	FieldMaintOrderNo,
	FieldVehiclePlateNo,
	FieldVehicleTeamName,
	FieldMaintRequestType,
	FieldDispatchedStationId,
	FieldStationName,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// MaintOrderNoValidator is a validator for the "maintOrderNo" field. It is called by the builders before save.
	MaintOrderNoValidator func(string) error
	// VehiclePlateNoValidator is a validator for the "vehiclePlateNo" field. It is called by the builders before save.
	VehiclePlateNoValidator func(string) error
	// VehicleTeamNameValidator is a validator for the "vehicleTeamName" field. It is called by the builders before save.
	VehicleTeamNameValidator func(string) error
	// MaintRequestTypeValidator is a validator for the "maintRequestType" field. It is called by the builders before save.
	MaintRequestTypeValidator func(string) error
	// StationNameValidator is a validator for the "stationName" field. It is called by the builders before save.
	StationNameValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)

// OrderOption defines the ordering options for the Order queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByMaintOrderNo orders the results by the maintOrderNo field.
func ByMaintOrderNo(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMaintOrderNo, opts...).ToFunc()
}

// ByVehiclePlateNo orders the results by the vehiclePlateNo field.
func ByVehiclePlateNo(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldVehiclePlateNo, opts...).ToFunc()
}

// ByVehicleTeamName orders the results by the vehicleTeamName field.
func ByVehicleTeamName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldVehicleTeamName, opts...).ToFunc()
}

// ByMaintRequestType orders the results by the maintRequestType field.
func ByMaintRequestType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMaintRequestType, opts...).ToFunc()
}

// ByDispatchedStationId orders the results by the dispatchedStationId field.
func ByDispatchedStationId(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDispatchedStationId, opts...).ToFunc()
}

// ByStationName orders the results by the stationName field.
func ByStationName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldStationName, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}
